import gradio as gr
import numpy as np

def crop_face(image_np):
    mp_face_detection = mp.solutions.face_detection
    with mp_face_detection.FaceDetection(model_selection=1, min_detection_confidence=0.5) as detector:
        results = detector.process(cv2.cvtColor(image_np, cv2.COLOR_BGR2RGB))
        if not results.detections:
            return None
        bbox = results.detections[0].location_data.relative_bounding_box
        h, w, _ = image_np.shape
        x_min = int(bbox.xmin * w)
        y_min = int(bbox.ymin * h)
        width = int(bbox.width * w)
        height = int(bbox.height * h)
        return image_np[y_min:y_min+height, x_min:x_min+width]

def image_to_text(image1, image2):
    # 이미지 없는 경우 예외처리
    if image1 is None or image2 is None:
        return "이미지를 두 장 모두 업로드하세요."
    
    img1 = cv2.cvtColor(np.array(image1), cv2.COLOR_BGR2RGB)
    img2 = cv2.cvtColor(np.array(image2), cv2.COLOR_BGR2RGB)
    
    # crop_face함수로 얼굴만 추출해서 저장
    face1 = crop_face(img1)
    face2 = crop_face(img2)
    
    if face1 is None or face2 is None:
        return "얼굴 감지 실패"
    
    cv2.imwrite("face1.jpg", face1)
    cv2.imwrite("face2.jpg", face2)
    
    base_options = python.BaseOptions(model_asset_path="./embedder.tflite")
    options = vision.ImageEmbedderOptions(
            base_options=base_options, l2_normalize=True, quantize=True
            )

    # create image embedder
    with vision.ImageEmbedder.create_from_options(options) as embedder:
        face1_mp = mp.Image.create_from_file("face1.jpg")
        face2_mp = mp.Image.create_from_file("face2.jpg")
        emb1 = embedder.embed(face1_mp).embeddings[0]
        emb2 = embedder.embed(face2_mp).embeddings[0]

        #유사도 비교(코사인 유사도 사용)
        similarity = vision.ImageEmbedder.cosine_similarity(
                emb1,
                emb2)
        return f"얼굴 유사도: {similarity:.4f}"

with gr.Blocks() as app:
    gr.Markdown("얼굴 유사도 비교")
    
    with gr.Tab('Image Upload'):
        with gr.Column():
            image1 = gr.Image(label="First Image")
        with gr.Column():
            image2 = gr.Image(label="Second Image")
    output = gr.Textbox(label="얼굴 유사도: ")
    convert_btn = gr.Button("유사도 비교하기")
    convert_btn.click(
        fn=image_to_text, inputs=[image1, image2], outputs=output)
app.launch(inline=False, share=True)